{"version":3,"sources":["components/nav/nav.js","tree_app/TreeItem.js","tree_app/TreeView.js","components/button/button.js","articles/article.js","articles/selected-article.js","articles/articles.js","app/App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","className","NavLink","to","activeClassName","React","Component","TreeItem","node","this","props","name","TreeView","data","id","children","map","key","tree_app_TreeItem","Button","_ref","title","handleClick","onClick","Article","article","src","urlToImage","alt","source","description","SelectedArticle","href","url","publishedAt","content","API_KEY","NewsAPI","CATEGORIES","Articles","state","articles","isLoading","handleChangeCategory","e","_this","getNews","target","innerText","toLowerCase","then","selectFirstArticle","handleSearchByKeyWord","value","selectArticle","selected","setState","category","q","_this2","v2","topHeadlines","country","response","_this3","_this4","_this$state","class","i","button_button","lib","minLength","debounceTimeout","onChange","index","articles_article","selected_article","App","HashRouter","nav","Route","path","component","Boolean","window","location","hostname","match","ReactDOM","render","app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83643f08.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport './style.scss';\r\n\r\n// TODO transfer array of links, use map to reder array list\r\nclass NavBar extends React.Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-link\"><NavLink to=\"/articles\" activeClassName=\"active\">Articles</NavLink></li>\r\n                    {/* <li className=\"nav-link\"><NavLink to=\"/tree\" activeClassName=\"active\">Tree View</NavLink></li> */}\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\n\r\nclass TreeItem extends Component {\r\n  render() {\r\n    const {node} = this.props;\r\n\r\n    return (\r\n      <span>\r\n        {node.name}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TreeItem;\r\n    ","import React, { Component } from 'react';\nimport TreeItem from './TreeItem';\n\nclass TreeView extends Component {\n  render() {\n    const data = {\n      \"id\": 1,\n      \"name\": \"All Categories\",\n      \"children\": [\n        {\n          \"id\": 2,\n          \"name\": \"For Sale\",\n          \"children\": [\n            {\n              \"id\": 3,\n              \"name\": \"Audio & Stereo\"\n            },\n            {\n              \"id\": 4,\n              \"name\": \"Baby & Kids Stuff\"\n            },\n            {\n              \"id\": 5,\n              \"name\": \"Music, Films, Books & Games\"\n            }\n          ]\n        },\n        {\n          \"id\": 6,\n          \"name\": \"Motors\",\n          \"children\": [\n            {\n              \"id\": 7,\n              \"name\": \"Car Parts & Accessories\"\n            },\n            {\n              \"id\": 8,\n              \"name\": \"Cars\"\n            },\n            {\n              \"id\": 13,\n              \"name\": \"Motorbike Parts & Accessories\"\n            }\n          ]\n        },\n        {\n          \"id\": 9,\n          \"name\": \"Jobs\",\n          \"children\": [\n            {\n              \"id\": 10,\n              \"name\": \"Accountancy\"\n            },\n            {\n              \"id\": 11,\n              \"name\": \"Financial Services & Insurance\"\n                    },\n            {\n              \"id\": 12,\n              \"name\": \"Bar Staff & Management\"\n            }\n          ]\n        }\n      ]\n    };\n    \n    return (\n      <div>\n        <h1>This is tree view app</h1>\n        <div>{data.name}</div>\n        <ul>\n          {data.children.map(node => <li key={node.id}><TreeItem node={node} /></li>)}\n        </ul>\n      </div>    \n    )\n  }\n}\n\nexport default TreeView;\n","import React from 'react';\r\n\r\nconst Button = ({title, handleClick}) => <button onClick={handleClick}>{title}</button>;\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nconst Article = ({article, handleClick}) => (\r\n    <div className=\"article-item\" onClick={() => handleClick(article)} >\r\n        <img className=\"article-image\" src={article.urlToImage} alt={article.source.name} />\r\n        <h2 className=\"article-title\">{article.title}</h2>\r\n        <p className=\"article-description\">{article.description}</p>\r\n    </div>\r\n)\r\n\r\nexport default Article;\r\n","import React from 'react';\r\n\r\nconst SelectedArticle = ({article}) => (\r\n    <div>\r\n        <h3 className=\"article-title\">{article.title}</h3>\r\n        <p><small>Source: <a href={article.url}>{article.source.name}</a> Date: {article.publishedAt} </small></p>\r\n        <p>{article.content}</p>\r\n        <img src={article.urlToImage} alt={article.source.name} />              \r\n    </div>\r\n)\r\n\r\nexport default SelectedArticle;\r\n","import React, { Component } from 'react';\r\nimport NewsAPI from 'newsapi';\r\nimport { DebounceInput } from 'react-debounce-input';\r\nimport Button from '../components/button/button.js';\r\nimport Article from './article.js';\r\nimport SelectedArticle from './selected-article.js';\r\nimport './style.scss';\r\n\r\nconst API_KEY = new NewsAPI('204141cf2b5443618d7531afb82b6bac');\r\nconst CATEGORIES = [\"business\", \"entertainment\", \"general\", \"health\", \"science\", \"sports\", \"technology\"];\r\n\r\nclass Articles extends Component {\r\n  state = {\r\n    articles: [],\r\n    article: null,\r\n    isLoading: true\r\n  }\r\n  \r\n  handleChangeCategory = e => {\r\n    this.getNews(e.target.innerText.toLowerCase())\r\n      .then(() => this.selectFirstArticle());\r\n  }\r\n\r\n  handleSearchByKeyWord = e => {\r\n    this.getNews(null, e.target.value)\r\n      .then(() => this.selectFirstArticle());\r\n  }\r\n\r\n  selectArticle = selected => {\r\n    this.setState({\r\n      article: selected\r\n    });\r\n  };\r\n\r\n  selectFirstArticle = () => {\r\n    this.selectArticle(this.state.articles[0]);\r\n  }\r\n\r\n  getNews(category, q) {\r\n    return API_KEY.v2.topHeadlines({\r\n      country: 'us',\r\n      category: category || '',\r\n      q: q || '' // keywords or a phrase to search for\r\n    }).then(response => {\r\n        this.setState({\r\n          articles: response.articles\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getNews().then(() => {\r\n      // hide loader\r\n      this.state.isLoading = !this.state.isLoading;\r\n      // show first article as default\r\n      this.selectFirstArticle();\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    const { articles, article, isLoading } = this.state;\r\n\r\n    if (isLoading) {\r\n      return (\r\n        <div class=\"spinner\">\r\n          <div class=\"dot1\"></div>\r\n          <div class=\"dot2\"></div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"article-body\">\r\n        <aside className=\"article-sidebar\">\r\n          <div className=\"article-filter\">\r\n            {/* Categories */}\r\n            <h2>Chose category:</h2>\r\n            {CATEGORIES.map((category, i) => <Button key={\"cat_\" + i} title={category} handleClick={this.handleChangeCategory} />)}\r\n            {/* Search field */}         \r\n            <h2>Search news by key words:</h2>\r\n            <DebounceInput\r\n              minLength={2}\r\n              debounceTimeout={300}\r\n              onChange={this.handleSearchByKeyWord} />\r\n          </div>\r\n          {/* articles list */}\r\n          <ul className=\"article-list\">\r\n            {articles.map((article, index) => (\r\n              <li className=\"article-item\" key={index + \"_\" + article.source.id}>\r\n                <Article article={article} handleClick={this.selectArticle} />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </aside>\r\n        {/* show selected/first article */}\r\n        <div className=\"article-content\">\r\n          {article && (\r\n            <SelectedArticle article={article} />\r\n          )}\r\n        </div>\r\n      </div>    \r\n    )\r\n  }\r\n}\r\n\r\nexport default Articles;\r\n","import React from 'react';\r\nimport NavBar from '../components/nav/nav.js';\r\nimport TreeView from '../tree_app/TreeView.js';\r\nimport Articles from '../articles/articles.js';\r\n//import { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport './style.scss';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n        <HashRouter>\r\n          <div className=\"root-element\">\r\n            <NavBar />\r\n            <Route path='/articles' component={Articles}/>\r\n            <Route path='/tree' component={TreeView}/>\r\n          </div>\r\n        </HashRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}